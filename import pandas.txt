import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# 1. Load or define your data
# Replace this with your actual data loading or definition
df = pd.read_csv('your_data.csv')  # Example for loading from a CSV file

# 2. Preprocess your data (optional)
# - Handle missing values
# - Perform feature scaling or normalization if necessary
# ...

# 3. Split data into features (X) and target variable (y)
X = df.drop('price', axis=1)  # Assuming 'price' is the target variable
y = df['price']

# 4. Split data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 5. Define and fit the linear regression model
lm = LinearRegression()
lm.fit(X_train, y_train)

# 6. Make predictions on the test set
predictions = lm.predict(X_test)

# 7. Evaluate model performance
# Calculate relevant metrics like R-squared, MAE, RMSE, etc.
# ...

# 8. Print the predictions (optional)
print(predictions)

# 9. Use the model for new predictions (optional)
new_data = pd.DataFrame(...)  # Define your new data
new_predictions = lm.predict(new_data)
print(new_predictions)